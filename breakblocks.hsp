#include "d3m.hsp"	;fps取得用
#include "hsp3util.as"
randomize

*gametitle
screen 0, 640, 480
title "ブロック崩し"

sdim buf_line, 20, 11

notesel string

color 128, 128, 255: boxf

font "メイリオ", 45, 1

pos ginfo(12)/2-45*6/2+5, 35: color 0x66, 0x66, 0x66: mes "ブロック崩し"
pos ginfo(12)/2-45*6/2,   30: color 255, 255, 255: mes "ブロック崩し"		;影

objsize 30*9, 60: objmode 2: font "メイリオ", 23, 1
pos ginfo(12)/2-30*9/2, ginfo(13)/2-30/2-80: button "ステージを選択する", *stageselect
font "メイリオ", 23
pos ginfo(12)/2-30*9/2, ginfo(13)/2-30/2+10: button "readme.txtを開く", *readmeopen
pos ginfo(12)/2-30*9/2, ginfo(13)/2-30/2+95: button "終了する", *quit
	
	color 255, 255, 255
	textmode 2
	font "ＭＳ ゴシック", 24
	text 50
	pos ginfo(12)/2-24*15/2, 100: color 225, 0, 0
	emes "※ボールの反射はランダムです。"
	
stop

*stageselect
	clrobj
	color 128, 128, 255: boxf
	
	;ステージリスト読み込み
	noteload dir_cur+"\\stages\\stages.txt"
	noteget buf, 0
	
	sdim filename, 12, int(buf)
	sdim stagetxt, 256, int(buf)
	
	liststr = ""
	
	repeat int(buf)
		noteget buf, cnt*2+1: filename(cnt)=buf
		noteget buf, cnt*2+2: stagetxt(cnt)=buf
		liststr += filename(cnt) + "\n"
	loop
	
	font "ＭＳ Ｐゴシック", 25
	txt = "ステージを選んでください"
	pos 10, 10: color 0, 0, 0: mes txt
	pos ginfo(12)-74, 10: objsize 64, 30: button "戻る", *gametitle
	pos 10, 50: objsize ginfo(12)/2-5, : listbox selectitem, 25*14, liststr
	pos ginfo(12)/2+5, 50: objsize ginfo(12)/2-15, 25*14+4: mesbox txt, , , 0: listid=stat
	pos 10, ginfo(13)-60: objsize ginfo(12)-20, 50: button "このステージで遊ぶ", *loadstage
	
	repeat -1
		if (selectitem==0): objprm listid, stagetxt(0): else: objprm listid, stagetxt(selectitem)
		await 100
	loop

*loadstage
	clrobj
	filestr=dir_cur+"\\stages\\"+filename(selectitem)
	exist filestr
	if (strsize!=-1) {
		noteload filestr
	} else {
		dialog "ファイルが見つかりませんでした。タイトル画面に戻ります。", 1, "ファイルエラー"
		goto *gametitle
	}
	goto *gamestart
	stop

*gamestart
clrobj

time = 0	;制限時間

bar_width = 100
bar_height = 20
bar_left = 190
bar_top = 400
bar_right = bar_left + bar_width
bar_bottom = bar_top + bar_height
bar_v = 2

ball_max = 3
ball_num = ball_max
ball_width = 10
ball_height = 10
ball_left = 0.0
ball_top = 0.0
ball_right = ball_width
ball_bottom = ball_height
ball_vx = -1.5	;+=左, -=右
ball_vy = -1.5	;+=下, -=上
ball_show = 0	;0=非表示，1=表示
ball_muki = 1	;向き	1=左上，2=右上，3=右下，4=左下

block_width = 40
block_height = 20
block_num = 0	;ブロックの総数


dim block_left, 10, 10
dim block_top, 10, 10
dim block_right, 10, 10
dim block_bottom, 10, 10
dim block_n, 10, 10		;この回数だけ壊せばいい
dim block_color, 10, 10
dim block_flg, 10, 10
repeat 10
	txt = ""
	i=cnt
	noteget buf_line(i), i
	repeat 10
		block_n(i, cnt)=peek(buf_line(i), cnt*2)-48
		block_color(i, cnt)=peek(buf_line(i), cnt*2+1)-48
		block_left(cnt, i) = 35 + i * block_width
		block_top(cnt, i) = 35 + cnt * block_height
		block_right(cnt, i) = block_left(cnt, i) + block_width - 1
		block_bottom(cnt, i) = block_top(cnt, i) + block_height - 1
		if (block_n(i, cnt)==1) {
			block_num++
			time+=300		;60fpsなら5秒のはず→100ブロックあれば500秒のはず　なのになんか速い？
		}
		txt+=block_color(i, cnt)+" "
	loop
	;dialog txt
loop
noteget buf_line(10), 10
highscore=int(buf_line(10))

repeat -1
	
	redraw 0

	if (time<=1200): color 128, 0, 0: else: color 0, 0, 0
	boxf   0,   0, 479, 479
	
	color 128, 128, 128: boxf 480,   0, 640, 480
	
	color 255, 224, 224: boxf 485,  95, 635, 120
	if (485+score/3<=635) {
		t=485+score/10-1
	} else {
		if (score>=1000): t=485+score/100-1: else: t=635
	}
	color 255, 128, 128: boxf 485,  95, t, 120
	
	color 224, 255, 224: boxf 485, 155, 635, 180
	if (ball_num==3): t=635: else: if (ball_num==0): t=484: else: t=int(485.0+150.0/(3.0/double(ball_num)))
	color 128, 255, 128: boxf 485, 155, t, 180

	font "メイリオ", 25

	pos 487,   7: color 204, 204, 204: mes "ブロック崩し"
	pos 485,   5: color   0,   0,   0: mes "ブロック崩し"	;影

	font "メイリオ", 18

	pos 485,  96: mes "得　点:"+score
	pos 485, 156: mes "残　機:"+ball_num
	pos 485, 216: mes "残　箱:"+block_num
	pos 485, 276: mes "残時間:"+time
	pos 485, 336: mes "このｽﾃｰｼﾞのﾊｲｽｺｱ\n\t"+highscore
	pos 485, ginfo(13)-25: mes ""+d3getfps()+"fps"	;fps表示

	color 255, 128, 0: boxf bar_left, 400, bar_right, 420
	
	
	if (block_num<=0): goto *gameclear

	if (ball_show==1) {
		if (ball_left<0 || ball_right>=480): ball_vx *= -1
		if (ball_top<0): ball_vy *= -1
		if (ball_bottom>=480) {
			ball_show = 0
			score=int(double(score)*0.95)
			time=int(double(time)*0.9)
			if (ball_num<=0): goto *gameover
		}
		if ((ball_bottom>=bar_top && ball_top<=bar_bottom) && (ball_right>=bar_left && ball_left<=bar_right)) {
			if (abs(ball_right-bar_left)<=2): ball_vx*=-1
			if (abs(bar_right-ball_left)<=2): ball_vx*=-1
			if (abs(ball_bottom-bar_top)<=2): ball_vy*=-1
			/*if (ball_top-bar_bottom<=ball_right-bar_left): ball_vy*=-1: else: ball_vx*=-1
			if (ball_bottom-bar_top<=ball_right-bar_left): ball_vy*=-1: else: ball_vx*=-1
			if (ball_top-bar_bottom<=bar_right-ball_left): ball_vy*=-1: else: ball_vx*=-1*/
		}
		ball_left += ball_vx
		ball_top += ball_vy
		ball_right += ball_vx
		ball_bottom += ball_vy
	}

	if (ball_show==1) {
		color 128, 128, 255
		boxf ball_left, ball_top, ball_right, ball_bottom
		time--
		if (time<0): goto *gameover
	}

	repeat 10
		i=cnt
		repeat 10
			if (block_n(cnt, i)>=1) {
				switch (block_color(cnt, i))
					case 0:
						r0=0x00: r1=0x66
						g0=0x00: g1=0x66
						b0=0xFF: b1=0xFF
						swbreak
					case 1:
						r0=0x33: r1=0x99
						g0=0x33: g1=0x99
						b0=0xFF: b1=0xFF
						swbreak
					case 2:
						r0=0x66: r1=0xCC
						g0=0x66: g1=0xCC
						b0=0xFF: b1=0xFF
						swbreak
					case 3:
						r0=0x99: r1=0xFF
						g0=0x99: g1=0xFF
						b0=0xFF: b1=0xFF
						swbreak
					case 4:
						r0=0xFF: r1=0xFF
						g0=0x99: g1=0xFF
						b0=0x00: b1=0x00
						swbreak
					case 5:
						r0=0xFF: r1=0xFF
						g0=0x99: g1=0xFF
						b0=0x99: b1=0xFF
						swbreak
					case 6:
						r0=0xFF: r1=0xFF
						g0=0x66: g1=0xCC
						b0=0x66: b1=0xCC
						swbreak
					case 7:
						r0=0xFF: r1=0xFF
						g0=0x33: g1=0x99
						b0=0x33: b1=0x99
						swbreak
					case 8:
						r0=0xFF: r1=0xFF
						g0=0x00: g1=0x66
						b0=0x00: b1=0x66
						swbreak
					case 9:
						r0=0x33: r1=0x00
						g0=0x33: g1=0x00
						b0=0x33: b1=0x00
						swbreak
				swend
				color r0, g0, b0
				boxf block_left(cnt, i), block_top(cnt, i), block_right(cnt, i), block_bottom(cnt, i)
				color r1, g1, b1
				boxf block_left(cnt, i) + 1, block_top(cnt, i) + 1, block_right(cnt, i) - 1, block_bottom(cnt, i) - 1
			}
		loop
	loop
	
	if (ball_show==0) {
		font "メイリオ", 14
		color 255, 255, 255
		pos 0, ginfo(13)-20
		mes "[←][→]キーでバーを左右に移動　[ESC]キーで終了します。"

		font "ＭＳ 明朝", 48
		pos 480/2-48*4-2, 300-1
		mes "Push [Space] Key"
		pos 480/2-48*4   , 300 -1
		mes "Push [Space] Key"
		pos 480/2-48*4 +2, 300 -1
		mes "Push [Space] Key"
		pos 480/2-48*4 -2, 300
		mes "Push [Space] Key"
		pos 480/2-48*4 +2, 300
		mes "Push [Space] Key"
		pos 480/2-48*4 -2, 300 +1
		mes "Push [Space] Key"
		pos 480/2-48*4   , 300 +1
		mes "Push [Space] Key"
		pos 480/2-48*4 +2, 300 +1
		mes "Push [Space] Key"
	
		color 0, 0, 255
		pos 480/2-48*4, 300
		mes "Push [Space] Key"
	}

	redraw 1

	stick key, 21
	if (key&1) {
		if (bar_left>0) {
			bar_left -= bar_v
			bar_right -= bar_v
			bar_v++
		} else {
			bar_left = 0
			bar_right = 100
			bar_v = 0
		}
	} else: if (key&4) {
		if (bar_right<480) {
			bar_left += bar_v
			bar_right += bar_v
			bar_v++
		} else {
			bar_left = 380
			bar_right = 480
			bar_v = 0
		}
	} else: if (key&16) {
		if (ball_show==0) {
			ball_left = bar_left + bar_width/2 - 5
			ball_top = bar_top - ball_height - 5
			ball_right = ball_left + ball_width
			ball_bottom = ball_top + ball_height
			if (rnd(2)==0): ball_vx = -1.5: else: ball_vx = 1.5
			ball_vy = -1.5
			ball_muki = 1
			ball_show = 1
			ball_num--
		}
	} else: if (key&128) {
		goto *gameover
	} else: bar_v=2

	repeat 10
		i = cnt
		repeat 10
			if (block_n(cnt, i)>0 && (ball_bottom>=block_top(cnt, i)-3 && ball_top<=block_bottom(cnt, i)) && (ball_right>=block_left(cnt, i) && ball_left<=block_right(cnt, i))) {
				block_n(cnt, i)--
				vy=ball_vy: vx=ball_vx
				if (rnd(2)==0): ball_vy*=-1
				if (rnd(2)==0): ball_vx*=-1
				block_flg(cnt, i)=1
				if (block_color(cnt, i)==4): score+=int(double(time)*0.1): else: score+=5
				block_num--
			}
			if (block_flg(cnt, i)==1): block_n(cnt, i)--
			block_flg(cnt, i)=0
		loop
	loop

	await 1
	
loop

*gameover
	font "ＭＳ 明朝", 96

	redraw 0

	;縁取り
	color 255, 255, 255
	pos ginfo_winx/2-96*3 -2, ginfo_winy/2-96/2 -2
	mes "Game Over..."
	pos ginfo_winx/2-96*3   , ginfo_winy/2-96/2 -2
	mes "Game Over...
	pos ginfo_winx/2-96*3 +2, ginfo_winy/2-96/2 -2
	mes "Game Over..."
	pos ginfo_winx/2-96*3 -2, ginfo_winy/2-96/2
	mes "Game Over..."
	pos ginfo_winx/2-96*3 +2, ginfo_winy/2-96/2
	mes "Game Over..."
	pos ginfo_winx/2-96*3 -2, ginfo_winy/2-96/2 +2
	mes "Game Over..."
	pos ginfo_winx/2-96*3   , ginfo_winy/2-96/2 +2
	mes "Game Over..."
	pos ginfo_winx/2-96*3 +2, ginfo_winy/2-96/2 +2
	mes "Game Over..."

	color 0, 0, 255
	pos ginfo_winx/2-96*3, ginfo_winy/2-96/2
	mes "Game Over..."

	font "ＭＳ 明朝", 32
	txt = "Score: "+score

	;縁取り
	color 255, 255, 255
	pos ginfo_winx-strlen(txt)*32 -1, ginfo_winy/2-96/2+100 -1
	mes txt
	pos ginfo_winx-strlen(txt)*32   , ginfo_winy/2-96/2+100 -1
	mes txt
	pos ginfo_winx-strlen(txt)*32 +1, ginfo_winy/2-96/2+100 -1
	mes txt
	pos ginfo_winx-strlen(txt)*32 -1, ginfo_winy/2-96/2+100
	mes txt
	pos ginfo_winx-strlen(txt)*32 +1, ginfo_winy/2-96/2+100
	mes txt
	pos ginfo_winx-strlen(txt)*32 -1, ginfo_winy/2-96/2+100 +1
	mes txt
	pos ginfo_winx-strlen(txt)*32   , ginfo_winy/2-96/2+100 +1
	mes txt
	pos ginfo_winx-strlen(txt)*32 +1, ginfo_winy/2-96/2+100 +1
	mes txt

	color 0, 0, 255
	pos ginfo_winx-strlen(txt)*32, ginfo_winy/2-96/2+100
	mes txt

	redraw 1
	
	wait 100
	dialog "タイトル画面に戻ります。", 1, "Game Over..."
	goto *gametitle

*gameclear
	font "ＭＳ 明朝", 96

	redraw 0
	
	txt = "Game Clear!!"
	;縁取り
	color 255, 255, 255
	pos ginfo_winx/2-96*3 -2, ginfo_winy/2-96/2 -2
	mes txt
	pos ginfo_winx/2-96*3   , ginfo_winy/2-96/2 -2
	mes txt
	pos ginfo_winx/2-96*3 +2, ginfo_winy/2-96/2 -2
	mes txt
	pos ginfo_winx/2-96*3 -2, ginfo_winy/2-96/2
	mes txt
	pos ginfo_winx/2-96*3 +2, ginfo_winy/2-96/2
	mes txt
	pos ginfo_winx/2-96*3 -2, ginfo_winy/2-96/2 +2
	mes txt
	pos ginfo_winx/2-96*3   , ginfo_winy/2-96/2 +2
	mes txt
	pos ginfo_winx/2-96*3 +2, ginfo_winy/2-96/2 +2
	mes txt

	color 255, 0, 0
	pos ginfo_winx/2-96*3, ginfo_winy/2-96/2
	mes txt

	font "ＭＳ 明朝", 32
	txt = "Score: "+score

	;縁取り
	color 255, 255, 255
	pos ginfo_winx-strlen(txt)*32 -1, ginfo_winy/2-96/2+100 -1
	mes txt
	pos ginfo_winx-strlen(txt)*32   , ginfo_winy/2-96/2+100 -1
	mes txt
	pos ginfo_winx-strlen(txt)*32 +1, ginfo_winy/2-96/2+100 -1
	mes txt
	pos ginfo_winx-strlen(txt)*32 -1, ginfo_winy/2-96/2+100
	mes txt
	pos ginfo_winx-strlen(txt)*32 +1, ginfo_winy/2-96/2+100
	mes txt
	pos ginfo_winx-strlen(txt)*32 -1, ginfo_winy/2-96/2+100 +1
	mes txt
	pos ginfo_winx-strlen(txt)*32   , ginfo_winy/2-96/2+100 +1
	mes txt
	pos ginfo_winx-strlen(txt)*32 +1, ginfo_winy/2-96/2+100 +1
	mes txt

	color 0, 0, 255
	pos ginfo_winx-strlen(txt)*32, ginfo_winy/2-96/2+100
	mes txt
	
	if (score>highscore) {
		noteadd str(score), 10, 1
		notesave filestr
	
		font "ＭＳ 明朝", 32, 2
	
		txt = "ハイスコア更新！"
	
		color 255, 255, 255
		pos ginfo_winx-strlen(txt)*32 -1, ginfo_winy/2-96/2+150 -1
		mes txt
		pos ginfo_winx-strlen(txt)*32   , ginfo_winy/2-96/2+150 -1
		mes txt
		pos ginfo_winx-strlen(txt)*32 +1, ginfo_winy/2-96/2+150 -1
		mes txt
		pos ginfo_winx-strlen(txt)*32 -1, ginfo_winy/2-96/2+150
		mes txt
		pos ginfo_winx-strlen(txt)*32 +1, ginfo_winy/2-96/2+150
		mes txt
		pos ginfo_winx-strlen(txt)*32 -1, ginfo_winy/2-96/2+150 +1
		mes txt
		pos ginfo_winx-strlen(txt)*32   , ginfo_winy/2-96/2+150 +1
		mes txt
		pos ginfo_winx-strlen(txt)*32 +1, ginfo_winy/2-96/2+150 +1
		mes txt

		color 0, 0, 255
		pos ginfo_winx-strlen(txt)*32, ginfo_winy/2-96/2+150
		mes txt
	}

	redraw 1
	
	wait 100
	dialog "タイトル画面に戻ります。", 1, "Game Clear!!"
	goto *gametitle

*quit
	end
	
*readmeopen
	exec "readme.txt", 16
